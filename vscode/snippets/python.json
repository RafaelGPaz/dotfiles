{
/*
	 // Place your snippets for MagicPython here. Each snippet is defined under a snippet name and has a prefix, body and
	 // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	 // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	 // same ids are connected.
	 // Example:
	 "Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"Custom script": {
			"prefix": "cscript",
			"body": [
				"# -*- coding: utf-8 -*-",
				"#!/usr/bin/env python3",
                "",
				"import argparse",
				"import logging",
				"import colorlog",
				"",
				"def main():",
				"    # Add description",
				"    parser = argparse.ArgumentParser(description='Description')",
				"    # parser.add_argument('-o', '--origin', action=readable_dir, dest='origin', help='Parameter which autocomplete directories')",
				"    # parser.add_argument('-d', '--destination', dest='destination', help='Simple paramenter')",
				"    args = parser.parse_args()",
				"    ",
				"    handler = colorlog.StreamHandler()",
				"    handler.setFormatter(colorlog.ColoredFormatter(",
				"        '%(log_color)s%(levelname)s:%(message)s'))",
				"    logger = colorlog.getLogger()",
				"    logger.addHandler(handler)",
				"    logger.setLevel(level=logging.NOTSET)",
				"    ",
				"    logger.info(\"Started\")",
				"    ",
				"    logger.info('EOL')",
				"    ",
				"if __name__ == '__main__':",
				"    main()",
				"$1"
			],
			"description": "Inserts a template to use in most of the scripts that I write"
		}
}